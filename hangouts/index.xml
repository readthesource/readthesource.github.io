<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hangouts on readthesource</title>
    <link>http://hangouts.readthesource.io/hangouts/</link>
    <description>Recent content in Hangouts on readthesource</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 20 May 2015 11:00:00 -0700</lastBuildDate>
    <atom:link href="http://hangouts.readthesource.io/hangouts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Elm</title>
      <link>http://hangouts.readthesource.io/hangouts/elm-lang/</link>
      <pubDate>Wed, 26 Oct 2015 11:00:00 -0700</pubDate>
      <guid>http://hangouts.readthesource.io/hangouts/elm-lang/</guid>
      <description></description>
    </item>
    <item>
      <title>Angular Universal</title>
      <link>http://hangouts.readthesource.io/hangouts/angular-universal/</link>
      <pubDate>Wed, 26 Oct 2015 11:00:00 -0700</pubDate>
      <guid>http://hangouts.readthesource.io/hangouts/angular-universal/</guid>
      <description></description>
    </item>
    <item>
      <title>Angular 2</title>
      <link>http://hangouts.readthesource.io/hangouts/angular-2/</link>
      <pubDate>Wed, 26 Oct 2015 11:00:00 -0700</pubDate>
      <guid>http://hangouts.readthesource.io/hangouts/angular-2/</guid>
      <description></description>
    </item>
    <item>
      <title>Aurelia.io Data Binding</title>
      <link>http://hangouts.readthesource.io/hangouts/aureliaio-data-binding/</link>
      <pubDate>Wed, 26 Oct 2015 11:00:00 -0700</pubDate>
      <guid>http://hangouts.readthesource.io/hangouts/aureliaio-data-binding/</guid>
      <description></description>
    </item>
    <item>
      <title>Netflix Falcor</title>
      <link>http://hangouts.readthesource.io/hangouts/netflix-falcor/</link>
      <pubDate>Wed, 26 Oct 2015 11:00:00 -0700</pubDate>
      <guid>http://hangouts.readthesource.io/hangouts/netflix-falcor/</guid>
      <description></description>
    </item>
    <item>
      <title>Clearwater</title>
      <link>http://hangouts.readthesource.io/hangouts/clearwater/</link>
      <pubDate>Wed, 26 Oct 2015 11:00:00 -0700</pubDate>
      <guid>http://hangouts.readthesource.io/hangouts/clearwater/</guid>
      <description></description>
    </item>
    <item>
      <title>Node.js Core Streams</title>
      <link>http://hangouts.readthesource.io/hangouts/nodejs-streams/</link>
      <pubDate>Wed, 26 Oct 2015 11:00:00 -0700</pubDate>
      <guid>http://hangouts.readthesource.io/hangouts/nodejs-streams/</guid>
      <description></description>
    </item>
    <item>
      <title>Famo.us Front End Containers</title>
      <link>http://hangouts.readthesource.io/hangouts/famo.us-front-end-containers/</link>
      <pubDate>Wed, 20 May 2015 11:00:00 -0700</pubDate>

      <guid>http://hangouts.readthesource.io/hangouts/famo.us-front-end-containers/</guid>
      <description></description>
    </item>

    <item>
      <title>NG-Aria &amp; Angular Accessibility with Marcy Sutton</title>
      <link>http://hangouts.readthesource.io/hangouts/ng-aria-angularjs-accessibility/</link>
      <pubDate>Thu, 09 Apr 2015 09:30:00 -0700</pubDate>

      <guid>http://hangouts.readthesource.io/hangouts/ng-aria-angularjs-accessibility/</guid>
      <description></description>
    </item>

    <item>
      <title>Nash and Divshot&#39;s CLI with Scott Corgan</title>
      <link>http://hangouts.readthesource.io/hangouts/nash-divshot-cli/</link>
      <pubDate>Thu, 26 Mar 2015 09:30:00 -0700</pubDate>

      <guid>http://hangouts.readthesource.io/hangouts/nash-divshot-cli/</guid>
      <description></description>
    </item>

    <item>
      <title>ICE Code Editor with Chris Strom</title>
      <link>http://hangouts.readthesource.io/hangouts/ice-code-editor/</link>
      <pubDate>Wed, 29 Oct 2014 09:30:00 -0700</pubDate>

      <guid>http://hangouts.readthesource.io/hangouts/ice-code-editor/</guid>
      <description></description>
    </item>

    <item>
      <title>Octoblu&#39;s Meshblu with Chris Matthieu</title>
      <link>http://hangouts.readthesource.io/hangouts/octoblu-meshblu/</link>
      <pubDate>Thu, 16 Oct 2014 12:30:00 -0700</pubDate>

      <guid>http://hangouts.readthesource.io/hangouts/octoblu-meshblu/</guid>
      <description></description>
    </item>

    <item>
      <title>Divshot&#39;s Superstatic with Scott Corgan</title>
      <link>http://hangouts.readthesource.io/hangouts/divshot-superstatic/</link>
      <pubDate>Thu, 02 Oct 2014 16:00:00 -0700</pubDate>

      <guid>http://hangouts.readthesource.io/hangouts/divshot-superstatic/</guid>
      <description></description>
    </item>

    <item>
      <title>React.js Internals with Nick Niemeir</title>
      <link>http://hangouts.readthesource.io/hangouts/react-internals/</link>
      <pubDate>Thu, 04 Sep 2014 16:00:00 +0000</pubDate>

      <guid>http://hangouts.readthesource.io/hangouts/react-internals/</guid>
      <description>&lt;p&gt;React: a robust functional view layer.&lt;/p&gt;

&lt;p&gt;View code and templating are combined as JavaScript.&lt;/p&gt;

&lt;p&gt;In JavaScript you create a virtual DOM, react diffs
changes between the last virtual DOM and the next,
mutating the real DOM only as necessary to reflect
the changes. This has huge implications for cognitive
overhead as well as performance.&lt;/p&gt;

&lt;p&gt;We are going to enter the source where that virtual
DOM gets created using calls to
&lt;code&gt;React.DOM[element](attributes, contents)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Example usage&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-JavaScript&#34;&gt;
var React = require(&#39;react&#39;)
  , d = React.DOM // Alias React.DOM for easier typing

var vDom =
  d.div({className: &#39;conainer&#39;}
    , d.div({className: &#39;contents&#39;},
      { start: d.p({}, &#39;Foo, bar, baz&#39;)
      , middle: d.a({href: &#39;http://github.com&#39;}, &#39;github&#39;)
      , end: d.p({}, [&#39;Weee&#39;, &#39;eeeeeee&#39;, &#39;eeee&#39;])
      }
    )
  )

console.log(JSON.stringify(vDom, null, 2))

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Creating the template interface-
&lt;a href=&#34;https://github.com/facebook/react/blob/master/src/browser/ReactDOM.js#L45&#34;&gt;https://github.com/facebook/react/blob/master/src/browser/ReactDOM.js#L45&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The actual function called for a tag (eg. React.DOM.div)-
&lt;a href=&#34;https://github.com/facebook/react/blob/master/src/core/ReactDescriptor.js#L136-188&#34;&gt;https://github.com/facebook/react/blob/master/src/core/ReactDescriptor.js#L136-188&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Mixed in component pieces-
&lt;a href=&#34;https://github.com/facebook/react/blob/master/src/core/ReactComponent.js#L217&#34;&gt;https://github.com/facebook/react/blob/master/src/core/ReactComponent.js#L217&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/facebook/react/blob/master/src/core/ReactMultiChild.js#L178&#34;&gt;https://github.com/facebook/react/blob/master/src/core/ReactMultiChild.js#L178&lt;/a&gt;
  Util to traverse all children-
  &lt;a href=&#34;https://github.com/facebook/react/blob/master/src/utils/traverseAllChildren.js#L185&#34;&gt;https://github.com/facebook/react/blob/master/src/utils/traverseAllChildren.js#L185&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/facebook/react/blob/master/src/browser/ui/ReactBrowserComponentMixin.js&#34;&gt;https://github.com/facebook/react/blob/master/src/browser/ui/ReactBrowserComponentMixin.js&lt;/a&gt;&lt;/p&gt;
</description>
    </item>

    <item>
      <title>Polymer Application Data Binding &amp; Communication</title>
      <link>http://hangouts.readthesource.io/hangouts/polymer-data-binding-and-communication/</link>
      <pubDate>Thu, 05 Jun 2014 16:30:35 -0700</pubDate>

      <guid>http://hangouts.readthesource.io/hangouts/polymer-data-binding-and-communication/</guid>
      <description>&lt;p&gt;Building a Polymer Web Component application I encountered a few challenges with passing data between various levels of nested components. In this ReadTheSource session we will look at some of the solutions I implemented and the code behind them. Some worked well and some just didn&amp;rsquo;t work.&lt;/p&gt;
</description>
    </item>

  </channel>
</rss>
